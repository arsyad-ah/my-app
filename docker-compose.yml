version: "3.3"
services:
  db:
    # image: postgres:13
    image: postgis/postgis:13-3.4-alpine
    container_name: $POSTGRES_NAME
    env_file: .env
    ports:
      - "$POSTGRES_PORT:5432"
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - app-network

  minio-server:
    image: minio/minio:RELEASE.2023-06-29T05-12-28Z
    container_name: $MINIO_SERVER_NAME
    networks:
      - app-network
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=$AWS_ACCESS_KEY_ID
      - MINIO_ROOT_PASSWORD=$AWS_SECRET_ACCESS_KEY

  minio-client:
    image: minio/mc
    container_name: $MINIO_CLIENT_NAME
    env_file: .env
    networks:
      - app-network
    depends_on:
      - minio-server
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set ${MINIO_SERVER_NAME} http://${MINIO_SERVER_NAME}:${MINIO_PORT} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb ${MINIO_SERVER_NAME}/${APP_BUCKET_NAME} --ignore-existing;
      /usr/bin/mc anonymous set public ${MINIO_SERVER_NAME}/${APP_BUCKET_NAME};
      exec sleep inf;
      "

  backend:
    container_name: $BACKEND_NAME
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BACKEND_FOLDER=$BACKEND_FOLDER
    networks:
      - app-network
    volumes:
      - ./backend/:/opt/${BACKEND_FOLDER}:delegated
      - backend-data:/opt/${BACKEND_FOLDER}/node_modules:delegated
    env_file: .env
    ports:
      - "$BACKEND_PORT:$BACKEND_PORT"
    depends_on:
      - db
      - minio-client
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_NAME}:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public

  frontend:
    container_name: $FRONTEND_NAME
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - FRONTEND_FOLDER=$FRONTEND_FOLDER
    networks:
      - frontend-network
    volumes:
      - ./frontend/:/opt/${FRONTEND_FOLDER}:delegated
      - frontend-data:/opt/${FRONTEND_FOLDER}/node_modules:delegated
    env_file: .env
    ports:
      - "$FRONTEND_PORT:$FRONTEND_PORT"
    depends_on:
      - backend
    environment:
      BACKEND_URL: http://${BACKEND_NAME}:${BACKEND_PORT}

networks:
  app-network:
  frontend-network:

volumes:
  postgres:
  minio_data:
    driver: local
  backend-data:
    driver: local
  frontend-data:
    driver: local
